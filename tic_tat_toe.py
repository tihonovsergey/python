board = ["-", "-", "-",  # Основное игровое поле, к которому
        "-", "-", "-",  # будет привязка основных проверок и функций игры.
        "-", "-", "-"]


def print_board(board):# Функция для вывода в консоль игрового поля
    board_edge = [1, 2, 3]  # Строка для вывода координат для визуализации.
                            # Выводим вместе с элементами поля.

    print(" ", *board_edge)
    print(board_edge[0], *board[:3])
    print(board_edge[1], *board[3:6])
    print(board_edge[2], *board[6:])


# Чтобы соответствовать визуальному отображению игрового поля, индекс нужной "клетки"
# подведем к правильному значению индекс = (верхняя цифра координат -1) +
# (цифра из вертикальной строчки координат - 1), умноженная на 3 (x -1) + (y -1)* 3)
# соответственно.

# Создадим функцию для ввода, где первый аргумент-это полученный, при вводе игроком,
# индекс нужной "клетки", а второй символ, который в эту "клетку" встанет, заменяя значение
# "-" символом игрока (Х или О)

# В этой функции сразу создадим проверку на правильность ввода цифр, х - должен быть не менее
# 1 и не более числа 3, также как, и "y". Учтем что это должны быть числа в диапазоне 1-3
# включительно и они не должны быть буквами. При вводе координат, которые уже были заняты в
# предыдущих ходах сделаем предупреждающую надпись что "клетка занята".

def move_players(player_symbol):
    valid = False
    while not valid:

        x = input('игрок  ' + player_symbol + '  введите число по горизонтали:')

        try:  # Исключаем ситуацию когда вместо числа вводится буква
            x = int(x)
        except:
            print("Некорректный ввод. Необходимо ввести число!Буквы и другие знаки исключены!"
                  "Попробуйте еще раз")
            continue

        y = input('игрок  ' + player_symbol + '  ведите число по вертикали:')

        try:
            y = int(y)
        except:
            print("Некорректный ввод. Необходимо ввести число!Буквы и другие знаки исключены!"
                  "Попробуйте еще раз")
            continue

        if 1 <= x <= 3 and 1 <= y <= 3:
            ind_board = (x -1) + (y -1)* 3
        else:
            print("Вводите цифры от 1 до 3 включительно!")
            continue

        if str(board[ind_board]) not in "XO":
            board[ind_board] = player_symbol
            valid = True
        else:
            print("Эта клетка уже занята! Введите координаты другой клетки !")


def valid_vin(board_center):  # Проверка побед.

    vin = [[0, 1, 2],  # Список победных комбинаций, при которых игра заканчивается
           [3, 4, 5],  # и выводит победителя.
           [6, 7, 8],  # Соответствуют значению индекса нужных для победы "клеток"
           [0, 3, 6],
           [1, 4, 7],
           [2, 5, 8],
           [0, 4, 8],
           [2, 4, 6]]

    for i in vin:
        if str(i[0])  not in "-": # Вносим условие, чтобы исключить победу символа "-",
                                  # в тот момент когда после 5 ходов игроков остаются
                                  # незанятыми подряд 3 клетки с символом "-".

            if board_center[i[0]] == board_center[i[1]] == board_center[i[2]]:
                return board_center[i[0]]
        else:
            return False
        return False


# Основная функция со счетчиком. Ход первого игрока - четный, второго - нечетный. Чтобы
# сложилась возможность, победы необходимо минимум 5 ходов.
def main(board):
    print(" Правила просты: Вы вводите два числа,где первое число обозначает"
          " положение по горизонтали,а второе - по вертикали,соответственно")
    counter = 0

    while not False:
        print_board(board)

        if counter % 2 == 0:
            move_players("X")
        else:
            move_players("O")
        counter += 1

        if counter > 4:
            tmp = valid_vin(board)  # Временная переменная для вывода победы.

            if tmp:
                print("*" * 13)
                print("Выиграл", tmp , ".Поздравляем!")
                break
        if counter == 9:
            print("Ничья!")
            break

    print_board(board)

    print("*" * 15)

    print("Для новой игры кликнуть кнопку 'Run'")

main(board)
